% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cs.fns.R
\name{cs.extended.model}
\alias{cs.extended.model}
\alias{cs.five.param}
\alias{cs.three.param}
\alias{cs.two.param}
\alias{cs.exponential}
\alias{cs.exponential.decay}
\title{Critical Speed Modelling Functions}
\usage{
cs.extended.model(
  data,
  d.prime.estim = 150,
  crit.speed.estim = 3.5,
  max.speed.estim = 12
)

cs.five.param(data, crit.speed.estim = 3.5, max.speed.estim = 12)

cs.three.param(
  data,
  d.prime.estim = 150,
  crit.speed.estim = 3.5,
  max.speed.estim = 12
)

cs.two.param(data, d.prime.estim = 150, crit.speed.estim = 3.5)

cs.exponential(data, crit.speed.estim = 3.5, max.speed.estim = 12)

cs.exponential.decay(data, crit.speed.estim = 3.5, max.speed.estim = 12)
}
\arguments{
\item{data}{a data frame of the form critspeed}

\item{d.prime.estim}{D' estimate, default set to 150 m}

\item{crit.speed.estim}{critical speed estimate, default set to 3.5 m/s}

\item{max.speed.estim}{max speed, default set to 12 m/s}
}
\description{
A model output that includes parameter estimates and model goodness-of-fit.
}
\details{
The critical speed model functions are helper functions that feed into \code{model.results()} and \code{model.fits()} to 
return summarized model fits and fitted data, respectively. 

Using nonlinear regression, `minpack.lm::nlsLM`, you can fit the six mathematical models (CV2, CV3, OmVD, 5-PL, exp, exp decay). 
The initial values for the regressions are `crit.speed.estim = 3.5` in m/s, `d.prime.estim = 150` in m, and 
`max.speed.estim = 12` in  m/s. These values were chosen after nonlinear regressions with an array of starting values 
(1, 3.5, and 5 for CV; 80, 150, and 1500 for Dâ€™; and 7, 12 and 15 for Vmax) converged to the same final values.  
The regression optimized parameters using the Levenberg-Marquardt algorithm to minimize the residual sum-of-squares (RSS). 

Individual model functions can be called. Please note that there is no explicit documentation for individual model functions. 

The `data` argument requires the data to be processed via `critspeed::critspeed`, `max.mean.speed.df`, or 
`max.median.speed.df`.

For more details, please see [model.results] and [model.fits].
}
\section{Functions}{
\itemize{
\item \code{cs.extended.model}: OmVD Model

\item \code{cs.five.param}: Five Parameter Model

\item \code{cs.three.param}: Three Parameter Model

\item \code{cs.two.param}: Two Parameter Model

\item \code{cs.exponential}: Exponential Model

\item \code{cs.exponential.decay}: Exponential Decay Model
}}

\examples{
# From raw data
data(raw_practice)

# Clean data
clean_practice <- clean.data(player.speed = raw_practice$speed, satellite.quality = raw_practice$hdop, max.speed = 12, max.satellite.quality = 2, metrics = "m/s")

# Build speed-duration data frame
# See ?critspeed::critspeed for more information
critspeed_practice <- critspeed(data = list(clean_practice), speed.col = "player.speed.metric", raw.data = TRUE, sample.rate = 10, dur = 600, roecker = FALSE)

# Fit models
# Can also call upon `model.results` for a succinct printout of the model fits
two_p <- critspeed:::cs.two.param(data = critspeed_practice, d.prime.estim = 150, crit.speed.estim = 3.5)
three_p <- critspeed:::cs.three.param(data = critspeed_practice, d.prime.estim = 150, crit.speed.estim = 3.5, max.speed.estim = 12)
five_p <- critspeed:::cs.five.param(data = critspeed_practice,crit.speed.estim = 3.5)
omvd <- critspeed:::cs.extended.model(data = critspeed_practice, d.prime.estim = 150, crit.speed.estim = 3.5, max.speed.estim = 12)

two_p; three_p; five_p; omvd

# Predict 
# Example is only for the 2 Parameter model
# Can also call upon `model.fits` for a succinct printout of the predicted model fits
two_p_pred <- data.frame(duration = (1:600)/sample.rate) # at 10 Hz
two_p_pred$max.mean.speed <- predict(two_p, newdata = two_p_pred)

head(two_p_pred)

plot(critspeed_practice$duration, critspeed_practice$max.mean.speed)
lines(two_p_pred$duration, two_p_pred$max.mean.speed)
}
\seealso{
[model.results], [model.fits]
}
